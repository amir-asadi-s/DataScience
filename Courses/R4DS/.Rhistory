id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"B",        "bp1",    140,
"B",        "bp2",    115,
"A",        "bp2",    120,
"A",        "bp3",    105
)
df
df |>
pivot_wider(
id_cols = id,
names_from = measurement,
values_from = value
)
df |>
distinct(measurement)
df |>
distinct(measurement) |>
pull()
df |>
select(-measurement, -value) |>
distinct()
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"A",        "bp1",    102,
"A",        "bp2",    120,
"B",        "bp1",    140,
"B",        "bp2",    115
)
df |>
pivot_wider(
names_from = measurement,
values_from = value
)
df |>
group_by(id, measurement) |>
summarize(n = n(), .groups = "drop") |>
filter(n > 1)
usethis::use_blank_slate()
install.packages('usethis')
usethis::use_blank_slate()
library(tidyverse)
students <- read_csv("7-students.csv")
students
students <- read_csv("data/students.csv", na = c("N/A", ""))
students <- read_csv("7-students.csv", na = c("N/A", ""))
students
students |>
rename(
student_id = `Student ID`,
full_name = `Full Name`
)
students <- read_csv("7-students.csv", na = c("N/A", ""))
students |> janitor::clean_names()
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan))
students <- students |>
janitor::clean_names() |>
mutate(
meal_plan = factor(meal_plan),
age = parse_number(if_else(age == "five", "5", age))
)
students
read_csv(
"a,b,c
1,2,3
4,5,6"
)
read_csv(
"The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
read_csv(
"# A comment I want to skip
x,y,z
1,2,3",
comment = "#"
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
library(tidyverse)
students <- read_csv('7-students.csv')
glimpse(students)
students
students <- read_csv('7-students.csv', na = c('N/A', ''))
students
students |>
rename( student_id = 'Student ID', full_name = 'Full Name')
students <- read_csv("7-students.csv", na = c("N/A", ""))
students |> janitor::clean_names()
students |> distinct(mealPlan)
students |> mutate(meal_plan = factor(mealPlan))
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan))
students <- students |>
janitor::clean_names() |>
mutate()
students <- students |>
janitor::clean_names() |>
mutate(
meal_plan = factor(meal_plan), age = parse_number(if_else(age == 'five', '5', age))
)
students
read_csv(
'a,b,c
1,2,3
4,5,6')'
read_csv(
"a,b,c
1,2,3
4,5,6"
)
read_csv(
"The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
read_csv(
"# A comment I want to skip
x,y,z
1,2,3",
comment = "#"
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
read_csv(
"1,2,3
4,5,6",
col_names = FALSE
)
#> # A tibble: 2 × 3
#>      X1    X2    X3
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
#> 2     4     5     6
read_csv(
"1,2,3
4,5,6",
col_names = c("x", "y", "z")
)
#> # A tibble: 2 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
#> 2     4     5     6
library(tidyverse)
billboard
billboard |>
pivot_longer(
cols = starts_with('wk'),
names_to = 'week',
values_to = 'rank',
values_drop_na = T
)
# Chunk 1
library(tidyverse)
billboard_longer <- billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
) |>
mutate(
week = parse_number(week)
)
billboard_longer
billboard_longer |>
ggplot(aes(x = week, y = rank, group = track)) +
geom_line(alpha = 0.25) +
scale_y_reverse()
df <- tribble(
~id,  ~bp1, ~bp2,
"A",  100,  120,
"B",  140,  115,
"C",  120,  125
)
df
df |>
pivot_longer(
cols = bp1:bp2,
names_to = 'measurement',
values_to = 'value'
)
who2
who2 |>
pivot_longer(
cols = !c('country', 'year'),
names_sep = '_',
names_to = c('method', 'gender', 'age'),
values_to = 'measurement'
)
household
household |>
pivot_longer(
cols = !family,
)
household |>
pivot_longer(
cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = TRUE
)
cms_patient_experience
cms_patient_experience |>
distinct(measure_cd, measure_title)
cms_patient_experience |>
pivot_wider(
names_from = measure_cd,
values_from = prf_rate
)
cms_patient_experience |>
pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"B",        "bp1",    140,
"B",        "bp2",    115,
"A",        "bp2",    120,
"A",        "bp3",    105
)
df
df |>
pivot_wider(
names_from = measurement,
values_from = value
)
df |>
distinct(measurement) |>
pull()
df |>
select(-measurement, -value) |>
distinct()
df |>
select(-measurement, -value) |>
distinct() |>
mutate(x = NA, y = NA, z = NA)
df <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"A",        "bp1",    102,
"A",        "bp2",    120,
"B",        "bp1",    140,
"B",        "bp2",    115
)
df |>
pivot_wider(
names_from = measurement,
values_from = value
)
#> Warning: Values from `value` are not uniquely identified; output will contain
#> list-cols.
#> • Use `values_fn = list` to suppress this warning.
#> • Use `values_fn = {summary_fun}` to summarise duplicates.
#> • Use the following dplyr code to identify duplicates.
#>   {data} %>%
#>   dplyr::group_by(id, measurement) %>%
#>   dplyr::summarise(n = dplyr::n(), .groups = "drop") %>%
#>   dplyr::filter(n > 1L)
#> # A tibble: 2 × 3
#>   id    bp1       bp2
#>   <chr> <list>    <list>
#> 1 A     <dbl [2]> <dbl [1]>
#> 2 B     <dbl [1]> <dbl [1]>
df |>
group_by(id, measurement) |>
summarize(n = n(), .groups = "drop") |>
filter(n > 1)
vignette("pivot", package = "tidyr")
library(tidyverse)
students <- read_csv('7-students.csv')
students
students <- read_csv('7-students.csv', na = c('N/A',''))
students
students |>
janitor::clean_names()
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan), age = parse_number(if_else(age == 'five', '5', age)))
students <- students |>
janitor::clean_names() |>
mutate(
meal_plan = factor(meal_plan),
age = parse_number(if_else(age == "five", "5", age))
)
students
read_csv('a, b, c
1, 2, 3
4, 5, 6')'
)
read_csv(
"a,b,c
1,2,3
4,5,6"
)
read_csv(
"The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
read_csv(
"# A comment I want to skip
x,y,z
1,2,3",
comment = "#"
)
#> # A tibble: 1 × 3
#>       x     y     z
#>   <dbl> <dbl> <dbl>
#> 1     1     2     3
library(tidyverse)
library(ggthemes)
table1
table2
table2 |>
pivot_wider(
id_cols = c('country', 'year'),
names_from = 'type',
values_from = 'count'
)
table2 |>
pivot_wider(
id_cols = c('country', 'year'),
names_from = 'type',
values_from = 'count'
) |>
mutate(
rate = cases / population * 10000
)
table2 |>
pivot_wider(
id_cols = c('country', 'year'),
names_from = 'type',
values_from = 'count'
) |>
mutate(
rate = cases / population * 10000
)
table2 |>
group_by(country, year) |>
mutate(
cases = count[type == 'cases'],
population = count[type == 'population']
) |>
distinct(country, year, cases, population) |>
mutate(
rate = cases / population * 10000
)
table3
table3 |>
pivot_wider(
id_cols = c('country', 'year'),
names_sep = '/',
values_from = 'rate'
)
billboard
billboard
billboard |>
pivot_longer(
cols = starts_with('wk'),
names_to = 'week',
values_to = 'rank',
values_drop_na = T,
)
billboard |>
pivot_longer(
cols = starts_with('wk'),
names_to = 'week',
values_to = 'rank',
values_drop_na = T,
) |>
mutate(
week = parse_number(week)
)
billboard |>
pivot_longer(
cols = starts_with('wk'),
names_to = 'week',
values_to = 'rank',
values_drop_na = T,
) |>
mutate(
week = parse_number(week)
) |>
ggplot(
aes(x = week, y = rank, group = track)
) +
geom_line(alpha = 0.25) +
scale_y_reverse()
df <- tribble(
~id,  ~bp1, ~bp2,
"A",  100,  120,
"B",  140,  115,
"C",  120,  125
)
df |>
pivot_longer()
df
df |>
pivot_longer(
cols = starts_with('bp'),
names_to = 'measurement',
values_to = 'value'
)
relig_income
relig_income |>
pivot_longer(
cols = !religion,
names_to = 'income_level',
values_to = 'count'
)
who
who2
who2 |>
pivot_longer(
cols = !c('country', 'year'),
names_sep = '_',
names_to = c('method', 'gender', 'age' ),
values_to = 'count'
)
who2 |>
pivot_longer(
cols = !c('country', 'year'),
names_sep = '_',
names_to = c('method', 'gender', 'age' ),
values_to = 'count',
values_drop_na = T
)
household
household |>
pivot_longer(
cols = !family,
names_to = c('.value', 'object'),
names_sep = '_'
)
household
df <- data.frame(
'id' = c('A', 'B'),
'x_1' = c(1, 5),
'x_2' = c(2, 6),
'y_1' = c(3, 7),
'y_2' = c(4, 8)
)
df
df |>
pivot_longer(
cols = !id,
names_sep = '_',
names_to = ('.value', 'count')
df |>
pivot_longer(
cols = !id,
names_to = ('.value', 'count'),
df
df |>
pivot_longer(
cols = !id,
names_to = c('.value', 'num'),
names_sep = '_'
)
cms_patient_experience
cms_patient_experience |>
distinct(measure_cd, measure_title)
cms_patient_experience
cms_patient_experience |>
pivot_wider(
id_cols = starts_with('org'),
names_from = measure_cd,
values_from = prf_rate
)
simple_csv <- "
x
10
.
20
30"
